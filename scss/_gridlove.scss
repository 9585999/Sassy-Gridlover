// @function exponent() taken from Sassy-math https://github.com/Team-Sass/Sassy-math
@function exponent($base, $exponent) {
	// reset value
	$value: $base;
	// positive intergers get multiplied
	@if $exponent > 1 {
		@for $i from 2 through $exponent {
			$value: $value * $base; } }
	// negitive intergers get divided. A number divided by itself is 1
	@if $exponent < 1 {
		@for $i from 0 through -$exponent {
			$value: $value / $base; } }
	// return the last value written
	@return $value;
}

// @mixin gridlover-xxx based on the Gridlover app system http://www.gridlover.net/app/
@mixin gridlover-body($size: $baseFontSize, $rem: false) {
	font-size: $size + px;
	line-height: round(($size * $baseLineHeight)) + px;
	@if($rem == true) {
		font-size: ($size / $browserFontSize) + rem;
		line-height: round(($size * $baseLineHeight)) / $browserFontSize + rem;
	}
}

@mixin gridlover-heading($step, $rem: false) {
	$size: $baseFontSize;
	$lineHeight: round($size * $baseLineHeight);
	$scale: $scaleFactor;
	$lines: $step + 1;
	font-size: round($size * exponent($scale, $step)) + px;
	line-height: $lineHeight * $lines + px;
	margin-bottom: $lineHeight + px;
	@if($step > 1) {
		margin-top: $lineHeight * 2 + px;
	}
	@else {
		margin-top: $lineHeight + px;
	}
	// displays rem units if 'true'
	@if($rem == true) {
		font-size: round($size * exponent($scale, $step)) / $browserFontSize + rem;
		line-height: ($lineHeight * $lines) / $browserFontSize + rem;
		margin-bottom: $lineHeight / $browserFontSize + rem;
		@if($step > 1) {
			margin-top: ($lineHeight * 2) / $browserFontSize + rem;
		}
		@else {
			margin-top: $lineHeight / $browserFontSize + rem;
		}
	}
}

@mixin gridlover-margins($rem: false) {
	margin-bottom: round($baseFontSize * $baseLineHeight) + px;
	margin-top: round($baseFontSize * $baseLineHeight) + px;
	// displays rem units if 'true'
	@if($rem == true) {
		margin-bottom: round($baseFontSize * $baseLineHeight) / $baseFontSize + rem;
		margin-top: round($baseFontSize * $baseLineHeight) / $baseFontSize + rem;
	}
}